<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	id="WebApp_ID" version="3.1">
	<display-name>SpringMVCDemo</display-name>
	<!-- <welcome-file-list> <welcome-file>index.html</welcome-file> <welcome-file>index.htm</welcome-file> 
		<welcome-file>index.jsp</welcome-file> <welcome-file>default.html</welcome-file> 
		<welcome-file>default.htm</welcome-file> <welcome-file>default.jsp</welcome-file> 
		</welcome-file-list> -->

	<!-- 配置DispatchcerServlet -->
	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 配置Spring mvc下的配置文件的位置和名称 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/springmvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!-- 这里的servlet-mapping表示拦截的模式，这里是“/”，表示对于所有的请求的拦截， 包括静态资源如html, js, jpg等。这时候对于静态资源的访问就会报404的错误 -->
	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!--访问静态资源测试，未成功？？ -->
	<!-- <servlet-mapping> <servlet-name>springDispatcherServlet</servlet-name> 
		<url-pattern>*.html</url-pattern> </servlet-mapping> <servlet-mapping> <servlet-name>springDispatcherServlet</servlet-name> 
		<url-pattern>*.css</url-pattern> </servlet-mapping> <servlet-mapping> <servlet-name>springDispatcherServlet</servlet-name> 
		<url-pattern>*.js</url-pattern> </servlet-mapping> <servlet-mapping> <servlet-name>springDispatcherServlet</servlet-name> 
		<url-pattern>*.jpg</url-pattern> </servlet-mapping> <servlet-mapping> <servlet-name>springDispatcherServlet</servlet-name> 
		<url-pattern>*.gif</url-pattern> </servlet-mapping> -->

	<!-- log4j配置，文件路径，因为是跟随项目启动 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/log4j.xml</param-value>
	</context-param>
	<!-- 配置log4j.xml变量，如果需要动态的就使用下面方式，使用方法${name} -->
	<!-- <context-param> <param-name>controller</param-name> <param-value>controller-log</param-value> 
		</context-param> -->

	<!-- <context-param> <param-name>rootLevel</param-name> <param-value>OFF</param-value> 
		</context-param> -->
		
	<!-- 加载log4j配置文件 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>


</web-app>