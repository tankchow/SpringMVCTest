<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gwi.zlh.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="gwi.zlh.model.User">
        <id column="userId" jdbcType="VARCHAR" property="userid" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="age" jdbcType="INTEGER" property="age" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="roleId" jdbcType="INTEGER" property="roleid" />
        <result column="departmentId" jdbcType="INTEGER"
            property="departmentid" />
    </resultMap>
    <sql id="Base_Column_List">
        userId, name, age, password, roleId, departmentId
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String"
        resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where userId = #{userid,jdbcType=VARCHAR}
        <!-- where userId = ${_parameter} 可以SQL注入，但测试未成功 -->
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from user
        where userId = #{userid,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="gwi.zlh.model.User">
        insert into user (userId, name, age,
        password, roleId, departmentId
        )
        values (#{userid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{age,jdbcType=INTEGER},
        #{password,jdbcType=VARCHAR}, #{roleid,jdbcType=INTEGER}, #{departmentid,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="gwi.zlh.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                userId,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="roleid != null">
                roleId,
            </if>
            <if test="departmentid != null">
                departmentId,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                #{userid,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="roleid != null">
                #{roleid,jdbcType=INTEGER},
            </if>
            <if test="departmentid != null">
                #{departmentid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="gwi.zlh.model.User">
        update user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="roleid != null">
                roleId = #{roleid,jdbcType=INTEGER},
            </if>
            <if test="departmentid != null">
                departmentId = #{departmentid,jdbcType=INTEGER},
            </if>
        </set>
        where userId = #{userid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="gwi.zlh.model.User">
        update user
        set name = #{name,jdbcType=VARCHAR},
        age = #{age,jdbcType=INTEGER},
        password = #{password,jdbcType=VARCHAR},
        roleId = #{roleid,jdbcType=INTEGER},
        departmentId = #{departmentid,jdbcType=INTEGER}
        where userId = #{userid,jdbcType=VARCHAR}
    </update>
</mapper>