<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="5 seconds">
	<!-- 日志级别：TRACE、DEBUG、INFO、WARN和ERROR -->
	<!-- 日志目录 -->
	<!-- <property name="logBase" value="${catalina.base}/logs" /> -->

	<!-- 控制台输出 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<Encoding>UTF-8</Encoding>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<!-- 日志输出格式：%d表示日期时间，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %logger{50} 表示logger名字最长50个字符，否则按照句点分割。 %msg：日志消息，%n是换行符 -->
			<pattern>
				logback-Console %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
			</pattern>
		</layout>
	</appender>

	<!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 -->
	<appender name="default" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<Encoding>UTF-8</Encoding>
		<!-- 指定日志文件的名称，可不指定，即按滚动规则命名，此中%d%i无效 -->
		<!-- <file>./logs-back/default-%d{yyyy-MM-dd}-%i.log</file> -->
		<!-- 当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名 TimeBasedRollingPolicy： 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责出发滚动。 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 滚动时产生的文件的存放位置及文件名称 %d{yyyy-MM-dd}：按天进行日志滚动 %i：当文件大小超过maxFileSize时，按照i进行文件滚动 -->
			<fileNamePattern>C:/logs-back/default-%d{yyyy-MM-dd}-%i.log
			</fileNamePattern>
			<!-- 当日志文件超过maxFileSize指定的大小是，根据上面提到的%i进行日志文件滚动 注意此处配置SizeBasedTriggeringPolicy是无法实现按文件大小进行滚动的，必须配置timeBasedFileNamingAndTriggeringPolicy -->
			<maxFileSize>2KB</maxFileSize>
			<!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件。假设设置每天滚动， 且maxHistory是365，则只保存最近365天的文件，删除之前的旧文件。注意，删除旧文件是， 那些为了归档而创建的目录也会被删除。 -->
			<MaxHistory>3</MaxHistory>
			<!-- 最大日志大小 -->
			<totalSizeCap>1MB</totalSizeCap>
		</rollingPolicy>
		<!-- 日志输出格式：%d表示日期时间，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %logger{50} 表示logger名字最长50个字符，否则按照句点分割。 %msg：日志消息，%n是换行符 -->
		<!-- <layout class="ch.qos.logback.classic.PatternLayout"> <pattern>default %d{yyyy-MM-dd HH:mm:ss.SSS} [ %thread ] - [ %-5level][%logger{50} : %line ] - %msg%n</pattern> </layout> -->
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>
				logback-default %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
		</encoder>
	</appender>


	<!-- WEB层日志 <appender name="IOMS_WEB_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender"> <file>${logBase}/service/IOMS_WEB.log</file> <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> rollover daily <fileNamePattern>${logBase}/service/%d{yyyy-MM-dd}/IOMS_WEB_%d{yyyy-MM-dd}_%i.log </fileNamePattern> <maxHistory>30</maxHistory> <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> or whenever the file size reaches 100MB <maxFileSize>60MB</maxFileSize> </timeBasedFileNamingAndTriggeringPolicy> </rollingPolicy> <encoder> <pattern>%msg%n</pattern> <charset>UTF-8</charset> </encoder> </appender> -->
	<root level="INFO">
		<appender-ref ref="console" />
		<appender-ref ref="default" />
	</root>

	<!-- WEB层日志 <logger name="com.hns.gwi.pms.web" level="ERROR"> <appender-ref ref="IOMS_WEB_LOG" /> </logger> -->
</configuration>
